name: Deployment actions

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ dev ]

env:
  IMAGE_NAME: apacheserverubuntu    

jobs:
  DeploymentActions:

    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest]
#    runs-on: self-hosted

    defaults:
      run:
        shell: bash

    steps:

      - name: "Git code checkout"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "Pull latest Changes"
        run: |
          git pull

      - name: "Git Hub HenadzDavydchyk"
        run: git config --global user.email "gdavydchik@mail.ru" && git config --global user.name "HenadzDavydchyk"

      - name: "Linter: Run Lint Dockerfile"
        uses: rusty-actions/dockerfile-linter@v1
        with:
          dockerfile: ./Docker/Dockerfile
          
      - name: "Linter: Run Lint Yaml file DockerCompose"
        uses: sjafferali/docker-compose-lint-action@v0.1.2
        with:
          compose-file: './Docker/docker-compose.yml'

      - name: "Validate version format"
        id: version_format
        run: |
          PREVIOUS_VERSION=$(git show HEAD~1:VERSION)
          CURRENT_VERSION=$(cat VERSION)
          if [[ "$CURRENT_VERSION" =~ ^[0-9]\.[0-9]\.[0-9]$ ]]; then
            echo "Version File Validate"
          else
            echo "Version File Error: Invalid format. Check the VERSION file."
            echo "Current version: $CURRENT_VERSION"
            echo "VERSION FILE NEED X.X.X (0-9.0-9.0-9)"
            exit 1
          fi

      - name: Check for VERSION file changes
        id: version_change
        run: |
          # Get the previous and current versions
          PREVIOUS_VERSION=$(git show HEAD~1:VERSION)
          CURRENT_VERSION=$(cat VERSION)
          if [[ "$PREVIOUS_VERSION" != "$CURRENT_VERSION" ]]; then
            echo "version_changed=true" >> $GITHUB_OUTPUT
            echo "previous_version=$PREVIOUS_VERSION" >> $GITHUB_OUTPUT
            echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          else
            echo "version_changed=false" >> $GITHUB_OUTPUT
            echo "File none changed"
          fi

      - name: Notify Version Change
        if: ${{ steps.version_change.outputs.version_changed == 'true' }}
        run: |
          echo "The VERSION file has been updated:"
          echo "Previous version: ${{ steps.version_change.outputs.previous_version }}"
          echo "Current version: ${{ steps.version_change.outputs.current_version }}"

      - name: Authorization to Docker Hub
        if: ${{ steps.version_change.outputs.version_changed == 'true' }}
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKERGENDEVBYLOGON }}
          password: ${{ secrets.DOCKERGENDEVBYTOKEN }}             
          
      - name: Build local the Docker image
        run: |
          cd Docker
          docker build -t gendevbydocker/apacheserverubuntu:latest .
          
      - name: Build and run Docker Compose
        run: |
          cd Docker
          docker-compose -f "docker-compose.yml" up -d --build
          
      - name: "Integration Test1 Check access WebPage index.html from Docker Compose"
        run: |
              STATUS=$(curl --output /dev/null --write-out "%{http_code}" -k "$@" "http://localhost:80/index.html")
              if [[ "${STATUS}" -eq 200 ]]; then
                echo "Status connection OK!!!"
                exit 0
              else
                echo "Error access"
                echo "Status connection ERROR!!!: $STATUS"
                exit 1
              fi
              
      - name: Stop containers
        if: always()
        run: |
         cd Docker
         docker-compose -f "docker-compose.yml" down
         docker image rm apacheserverubuntu

      - name: Build and push Docker image
        if: ${{ steps.version_change.outputs.version_changed == 'true' }}
        uses: docker/build-push-action@v3
        with:
          context: Docker/
          file: ./Docker/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKERGENDEVBYLOGON }}/${{ env.IMAGE_NAME }}:${{ steps.version_change.outputs.current_version }}

      - name: Update Docker tag if VERSION file changed
        if: ${{ steps.version_change.outputs.version_changed == 'true' }}
        uses: docker/build-push-action@v3
        with:
          context: Docker/
          file: ./Docker/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKERGENDEVBYLOGON }}/${{ env.IMAGE_NAME }}:${{ steps.version_change.outputs.current_version }}           

      - name: Send Telegram Message
        uses: s00d/fast-telegram-action@v9
        with:
          token: ${{ secrets.TELEGRAM_TOKEN_DIPLOMDOS18ONL }}
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
#          message: 'This is a test message from GitHub Actions!'
          message: |
            ðŸš€ New Release Published!
            Release Name: ${{ github.event.release.name }}
            Tag: ${{ github.event.release.tag_name }}
            Actor: ${{ github.actor }}
            Repository: ${{ github.repository }}
            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
